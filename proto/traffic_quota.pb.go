// Code generated by protoc-gen-go. DO NOT EDIT.
// source: traffic_quota.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TakeTokenRequest struct {
	PartitionKey         string   `protobuf:"bytes,1,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	ClustringKey         []string `protobuf:"bytes,2,rep,name=clustring_key,json=clustringKey,proto3" json:"clustring_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeTokenRequest) Reset()         { *m = TakeTokenRequest{} }
func (m *TakeTokenRequest) String() string { return proto.CompactTextString(m) }
func (*TakeTokenRequest) ProtoMessage()    {}
func (*TakeTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ddddb9d72ca1a5, []int{0}
}

func (m *TakeTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeTokenRequest.Unmarshal(m, b)
}
func (m *TakeTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeTokenRequest.Marshal(b, m, deterministic)
}
func (m *TakeTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeTokenRequest.Merge(m, src)
}
func (m *TakeTokenRequest) XXX_Size() int {
	return xxx_messageInfo_TakeTokenRequest.Size(m)
}
func (m *TakeTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeTokenRequest proto.InternalMessageInfo

func (m *TakeTokenRequest) GetPartitionKey() string {
	if m != nil {
		return m.PartitionKey
	}
	return ""
}

func (m *TakeTokenRequest) GetClustringKey() []string {
	if m != nil {
		return m.ClustringKey
	}
	return nil
}

type TakeTokenResponse struct {
	Allowed              []bool   `protobuf:"varint,1,rep,packed,name=allowed,proto3" json:"allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeTokenResponse) Reset()         { *m = TakeTokenResponse{} }
func (m *TakeTokenResponse) String() string { return proto.CompactTextString(m) }
func (*TakeTokenResponse) ProtoMessage()    {}
func (*TakeTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8ddddb9d72ca1a5, []int{1}
}

func (m *TakeTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeTokenResponse.Unmarshal(m, b)
}
func (m *TakeTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeTokenResponse.Marshal(b, m, deterministic)
}
func (m *TakeTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeTokenResponse.Merge(m, src)
}
func (m *TakeTokenResponse) XXX_Size() int {
	return xxx_messageInfo_TakeTokenResponse.Size(m)
}
func (m *TakeTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TakeTokenResponse proto.InternalMessageInfo

func (m *TakeTokenResponse) GetAllowed() []bool {
	if m != nil {
		return m.Allowed
	}
	return nil
}

func init() {
	proto.RegisterType((*TakeTokenRequest)(nil), "orgplace.trafficquota.proto.TakeTokenRequest")
	proto.RegisterType((*TakeTokenResponse)(nil), "orgplace.trafficquota.proto.TakeTokenResponse")
}

func init() { proto.RegisterFile("traffic_quota.proto", fileDescriptor_e8ddddb9d72ca1a5) }

var fileDescriptor_e8ddddb9d72ca1a5 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x29, 0x4a, 0x4c,
	0x4b, 0xcb, 0x4c, 0x8e, 0x2f, 0x2c, 0xcd, 0x2f, 0x49, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x92, 0xce, 0x2f, 0x4a, 0x2f, 0xc8, 0x49, 0x4c, 0x4e, 0xd5, 0x83, 0xca, 0x22, 0x49, 0x2a, 0xc5,
	0x70, 0x09, 0x84, 0x24, 0x66, 0xa7, 0x86, 0xe4, 0x67, 0xa7, 0xe6, 0x05, 0xa5, 0x16, 0x96, 0xa6,
	0x16, 0x97, 0x08, 0x29, 0x73, 0xf1, 0x16, 0x24, 0x16, 0x95, 0x64, 0x96, 0x64, 0xe6, 0xe7, 0xc5,
	0x67, 0xa7, 0x56, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xf1, 0xc0, 0x05, 0xbd, 0x53, 0x2b,
	0x41, 0x8a, 0x92, 0x73, 0x4a, 0x8b, 0x4b, 0x8a, 0x32, 0xf3, 0xd2, 0xc1, 0x8a, 0x98, 0x14, 0x98,
	0x41, 0x8a, 0xe0, 0x82, 0xde, 0xa9, 0x95, 0x4a, 0xba, 0x5c, 0x82, 0x48, 0xa6, 0x17, 0x17, 0xe4,
	0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x70, 0xb1, 0x27, 0xe6, 0xe4, 0xe4, 0x97, 0xa7, 0xa6, 0x48, 0x30,
	0x2a, 0x30, 0x6b, 0x70, 0x04, 0xc1, 0xb8, 0x46, 0xcd, 0x8c, 0x5c, 0xc2, 0x21, 0x10, 0x37, 0x06,
	0x82, 0xdc, 0x18, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x94, 0xc3, 0xc5, 0x09, 0x37, 0x46,
	0x48, 0x57, 0x0f, 0x8f, 0x7f, 0xf4, 0xd0, 0x3d, 0x23, 0xa5, 0x47, 0xac, 0x72, 0x88, 0xeb, 0x94,
	0x18, 0x9c, 0xd8, 0xa3, 0x58, 0xc1, 0x92, 0x49, 0x6c, 0x60, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x1e, 0x8b, 0x18, 0xab, 0x56, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TrafficQuotaServiceClient is the client API for TrafficQuotaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrafficQuotaServiceClient interface {
	TakeToken(ctx context.Context, in *TakeTokenRequest, opts ...grpc.CallOption) (*TakeTokenResponse, error)
}

type trafficQuotaServiceClient struct {
	cc *grpc.ClientConn
}

func NewTrafficQuotaServiceClient(cc *grpc.ClientConn) TrafficQuotaServiceClient {
	return &trafficQuotaServiceClient{cc}
}

func (c *trafficQuotaServiceClient) TakeToken(ctx context.Context, in *TakeTokenRequest, opts ...grpc.CallOption) (*TakeTokenResponse, error) {
	out := new(TakeTokenResponse)
	err := c.cc.Invoke(ctx, "/orgplace.trafficquota.proto.TrafficQuotaService/TakeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrafficQuotaServiceServer is the server API for TrafficQuotaService service.
type TrafficQuotaServiceServer interface {
	TakeToken(context.Context, *TakeTokenRequest) (*TakeTokenResponse, error)
}

func RegisterTrafficQuotaServiceServer(s *grpc.Server, srv TrafficQuotaServiceServer) {
	s.RegisterService(&_TrafficQuotaService_serviceDesc, srv)
}

func _TrafficQuotaService_TakeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrafficQuotaServiceServer).TakeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orgplace.trafficquota.proto.TrafficQuotaService/TakeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrafficQuotaServiceServer).TakeToken(ctx, req.(*TakeTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrafficQuotaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orgplace.trafficquota.proto.TrafficQuotaService",
	HandlerType: (*TrafficQuotaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TakeToken",
			Handler:    _TrafficQuotaService_TakeToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "traffic_quota.proto",
}
