// Code generated by MockGen. DO NOT EDIT.
// Source: tokenbucket.go

// Package tokenbucket is a generated GoMock package.
package tokenbucket

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTokenBucket is a mock of TokenBucket interface
type MockTokenBucket struct {
	ctrl     *gomock.Controller
	recorder *MockTokenBucketMockRecorder
}

// MockTokenBucketMockRecorder is the mock recorder for MockTokenBucket
type MockTokenBucketMockRecorder struct {
	mock *MockTokenBucket
}

// NewMockTokenBucket creates a new mock instance
func NewMockTokenBucket(ctrl *gomock.Controller) *MockTokenBucket {
	mock := &MockTokenBucket{ctrl: ctrl}
	mock.recorder = &MockTokenBucketMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokenBucket) EXPECT() *MockTokenBucketMockRecorder {
	return m.recorder
}

// Fill mocks base method
func (m *MockTokenBucket) Fill() {
	m.ctrl.Call(m, "Fill")
}

// Fill indicates an expected call of Fill
func (mr *MockTokenBucketMockRecorder) Fill() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fill", reflect.TypeOf((*MockTokenBucket)(nil).Fill))
}

// Take mocks base method
func (m *MockTokenBucket) Take(partitionKey string, clusteringKeys []string) (bool, error) {
	ret := m.ctrl.Call(m, "Take", partitionKey, clusteringKeys)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Take indicates an expected call of Take
func (mr *MockTokenBucketMockRecorder) Take(partitionKey, clusteringKeys interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Take", reflect.TypeOf((*MockTokenBucket)(nil).Take), partitionKey, clusteringKeys)
}
